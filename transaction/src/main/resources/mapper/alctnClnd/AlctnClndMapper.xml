<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.bank.transaction.mapper.stckInfo(주식정보) -->
<mapper namespace="com.bank.transaction.mapper.alctnClnd.AlctnClndMapper">
    
<select id="alctnClndSelect" resultType="Map" parameterType="Map">
    SELECT 
         DVSN
        ,STOCK_NAME
        ,TIKER
        ,TRNSCDATE
        ,TRIM(TO_CHAR(AMOUNT , 'FM9990.99'))                                                     AS AMOUNT /* 거래금액*/
    FROM 
    (
        SELECT
           /* SQL_ID : AlctnClndMapper.alctnClndSelect */
            '배당내역'                               AS DVSN
           ,STOCK_NAME
           ,TIKER
           ,TO_CHAR(TRNSCDATE, 'YYYY-MM-DD') AS TRNSCDATE
           ,RTRIM(AMOUNT)                  AS AMOUNT
        FROM
            TRANSACTION
        WHERE
           1 = 1
          <if test="(YMD!=null and !''.equals(YMD) and !'null'.equals(YMD))">
           AND TO_CHAR(TRNSCDATE, 'YYYY-MM') = #{YMD}
          </if>
          <if test="(startDate!=null and !''.equals(startDate) and !'null'.equals(startDate))">
           AND TO_DATE(TRNSCDATE) 
                        BETWEEN  TRUNC(TO_DATE(#{startDate}, 'YYYY-MM-DD'), 'MM') AND LAST_DAY(TO_DATE(#{endDate}, 'YYYY-MM-DD'))
          </if>
          
        UNION ALL
        
        SELECT /*주식거래내역*/
            '주식거래'                                   AS DVSN
            ,B.STCNM                                   AS STOCK_NAME    /*주식명*/
            ,B.TIKER
            ,TO_CHAR(TO_DATE(A.DLNGYMD), 'YYYY-MM-DD') AS TRNSCDATE     /*거래일자*/
            ,RTRIM((TO_NUMBER(A.STCKCNT) * TO_NUMBER(B.DVDN)) * DECODE(B.DVDNCYC, '월', 12, REGEXP_COUNT(B.DVDNCYC, ',')) )   AS AMOUNT    /* 거래금액     */
        FROM STCKDLNGINFO A, STOCKINFORMATION B
            WHERE B.TIKER = A.TIKER
                AND A.USEYN    ='Y'
                AND A.DELYN    ='N'
              <if test="(YMD!=null and !''.equals(YMD) and !'null'.equals(YMD))">
                AND TO_CHAR(TO_DATE(A.DLNGYMD), 'YYYY-MM-DD') = #{YMD}
              </if>
              <if test="(startDate!=null and !''.equals(startDate) and !'null'.equals(startDate))">
                 AND TO_DATE(A.DLNGYMD) 
                        BETWEEN  TRUNC(TO_DATE(#{startDate}, 'YYYY-MM-DD'), 'MM') AND LAST_DAY(TO_DATE(#{endDate}, 'YYYY-MM-DD'))
              </if>
         ORDER BY    TRNSCDATE
    )
    WHERE 
         1=1
   <if test="(S_DVSN!=null and !''.equals(S_DVSN) and !'전체'.equals(S_DVSN))">
     AND DVSN = #{S_DVSN}
   </if>
</select>



<select id="stckClndSelect" resultType="Map" parameterType="Map">
    SELECT
           /* SQL_ID : AlctnClndMapper.stckClndSelect */
            ROW_NUMBER() OVER(ORDER BY TO_CHAR(TRNSCDATE, 'YYYY-MM-DD') DESC) ROW_NUM
           ,TO_CHAR(TRNSCDATE, 'YYYY') AS YEAR
           ,TO_CHAR(TRNSCDATE, 'MM') AS MONTH
           ,TO_CHAR(TRNSCDATE, 'DD') AS DAY
           ,TO_CHAR(TRNSCDATE, 'YYYY-MM-DD') AS TRNSCDATE /*베딩일*/
           ,STOCK_NAME                                    /*주식명*/
           ,TIKER                                         /*주식티커*/
           ,RTRIM(AMOUNT)                  AS AMOUNT      /*베딩금*/
   FROM
            TRANSACTION
   WHERE 1=1
    <choose>
          <when  test="(trnscdate!=null and !''.equals(trnscdate) and !'null'.equals(trnscdate))">
            AND TO_CHAR(TRNSCDATE, 'YYYY-MM-DD') = #{trnscdate}
          </when>
          <otherwise>
            AND TO_CHAR(TRNSCDATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
          </otherwise>
    </choose>

</select>

 <select id="stckClndYearSelect" resultType="Map" parameterType="Map">
    SELECT /* SQL_ID : AlctnClndMapper.stckClndYearSelect */
          TO_CHAR(TRNSCDATE, 'YYYY') AS S_YEAR
        , TO_CHAR(TRNSCDATE, 'MM')   AS S_MONTH
        , SUM(AMOUNT)                AS S_AMOUNT
    FROM
        TRANSACTION
    WHERE 1=1
    <choose>
          <when test="(trnscdate!=null and !''.equals(trnscdate) and !'null'.equals(trnscdate))">
            AND TO_CHAR(TRNSCDATE, 'YYYY') = #{yesr}
          </when>
          <otherwise>
            AND TO_CHAR(TRNSCDATE, 'YYYY') = TO_CHAR(SYSDATE, 'YYYY')
          </otherwise>
      </choose>
    GROUP BY
        TO_CHAR(TRNSCDATE, 'YYYY')
       ,TO_CHAR(TRNSCDATE, 'MM')
    ORDER BY 
        TO_CHAR(TRNSCDATE, 'YYYY') || TO_CHAR(TRNSCDATE, 'MM') DESC
</select>

</mapper>