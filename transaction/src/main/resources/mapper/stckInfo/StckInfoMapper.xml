<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.bank.transaction.mapper.stckInfo(주식정보) -->
<mapper namespace="com.bank.transaction.mapper.stckInfo.StckInfoMapper">

<!-- 주식 정보 조회-->
<select id = "stckInfoSelect"  resultType="Map" parameterType="Map" >
     			SELECT		/* SQL_ID : StckInfoMapper.stckInfoSelect(주식 정보 조회) */
	                *
	            FROM
	                (
		                SELECT
		                    *
		                FROM
                    	(
							SELECT 		 ROW_NUMBER() OVER (ORDER BY USEYN DESC, DELYN,  (CASE WHEN REGEXP_LIKE(TIKER, '^[0-9]+$') THEN 2 ELSE 1 END), STCNM) AS NO_
										,ROW_NUMBER() OVER (ORDER BY USEYN DESC, DELYN,  (CASE WHEN REGEXP_LIKE(TIKER, '^[0-9]+$') THEN 2 ELSE 1 END), STCNM) AS ROW_
										,TURN		/*순번       */
										,TIKER		/*주식_티커   */
										,STCNM		/*주식명     */
										,DVDNCYC	/*배당_주기   */
										,DVDN		/*배당금     */
										,USEYN		/*사용여부    */
										,DELYN		/*삭제여부    */
										,REGYMD		/*등록일자    */
										,MDFCNYMD	/*수정일자    */
                        				,COUNT(*) OVER() AS totalPages /*페이징 처리용 총 건수*/
							FROM STOCKINFORMATION
							 	WHERE 1=1
							 		  <if test="TIKER!=null and !TIKER.equals('') and !'null'.equals(TIKER)">
										AND TIKER LIKE #{TIKER} || '%' /*주식_티커   */
									  </if>
									  <if test="STCNM!=null and !STCNM.equals('') and !'null'.equals(STCNM)">
										AND STCNM LIKE #{STCNM}  || '%'/*주식명     */
									  </if>
									  <if test="DVDNCYC!=null and !DVDNCYC.equals('') and !'null'.equals(DVDNCYC)">
										AND DVDNCYC LIKE #{DVDNCYC}  || '%'/*배당_주기   */
									  </if>
						)
                WHERE
                    NO_  <![CDATA[ <=  ]]>  (#{page} * #{rowCount})
                       )
                WHERE (((#{page}-1) * #{rowCount}) + 1) <![CDATA[  <=	]]>   NO_
</select>

<!-- 주식 정보 등록-->
<insert id = "stckInfoInsert" parameterType="Map" >
		INSERT /* SQL_ID : StckInfoMapper.stckInfoInsert(주식 정보 등록)  */
			INTO 
				STOCKINFORMATION
			(
				 TURN		/*순번       */
				,TIKER		/*주식_티커   */
				,STCNM		/*주식명     */
				,DVDNCYC	/*배당_주기   */
				,DVDN		/*배당금     */
				,USEYN		/*사용여부    */
				,DELYN		/*삭제여부    */
				,REGYMD		/*등록일자    */
				,MDFCNYMD	/*수정일자    */
				)
		VALUES(
				 (
				 	SELECT 
				 		(TO_CHAR(SYSDATE, 'YYMMDD')||LPAD(nvl(max(SUBSTR(TURN, 7))+1,0),4,0))
				 	FROM STOCKINFORMATION WHERE TURN LIKE TO_CHAR(SYSDATE , 'YYMMDD') || '%'
				 )		/*순번       */
				,#{TIKER}		/*주식_티커   */
				,#{STCNM}		/*주식명     */
				,#{DVDNCYC}		/*배당_주기   */
				,#{DVDN}		/*배당금     */
				,#{USEYN}		/*사용여부    */
				,#{DELYN}		/*삭제여부    */
				,SYSDATE		/*등록일자    */
				,SYSDATE		/*수정일자    */
		)
</insert>

<update id="stckInfoUpdate" parameterType="Map" >
    UPDATE /* SQL_ID : StckInfoMapper.stckInfoSelect(주식 정보 수정) */
    	STOCKINFORMATION
        SET  STCNM    = #{STCNM}       /*주식명     */
            ,DVDNCYC  = #{DVDNCYC}     /*배당_주기   */
            ,DVDN     = #{DVDN}        /*배당금     */
            ,USEYN    = #{USEYN}       /*사용여부    */
            ,DELYN    = #{DELYN}       /*삭제여부    */
            ,MDFCNYMD = SYSDATE
    WHERE   TURN  = #{TURN}
        AND TIKER = #{TIKER}
</update>

</mapper>